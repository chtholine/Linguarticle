version: '3.9'

volumes:
  postgres_data: { }
  static_volume:
  media_volume:

services:
  app:
    build: .
    expose:
      - "8000"

    user: "999:1000" # docker-compose run app id -u user (get user_id for collectstatic permission)
    volumes:
      - static_volume:/wd/staticfiles:rw
      - media_volume:/wd/apps/media:rw
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    env_file:
      - .env
    depends_on:
      - postgres
    profiles:
      - full_dev
    command: /start.sh

  postgres:
    image: postgres:15
    ports:
      - "15432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw
    env_file:
      - .env
    profiles:
      - full_dev
      - local_dev

  nginx:
    image: nginx:latest
    build: ./docker/nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/wd/staticfiles:rw
      - media_volume:/wd/apps/media:rw
      - ./docker/nginx/:/etc/nginx/conf.d/
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    depends_on:
      - app
    profiles:
      - full_dev
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"